# data file for the Fltk User Interface Designer (fluid)
version 1.0305
header_name {.h}
code_name {.cxx}
decl {\#include "Bug.h"} {private local
}

decl {\#include<FL/Fl_PNG_Image.H>} {private local
}

decl {Bug bug;} {private local
}

decl {Fl_PNG_Image d("dog.png");} {private local
}

decl {Fl_PNG_Image d1("dog1.png");} {private local
}

decl {Fl_PNG_Image d2("dog2.png");} {private local
}

decl {Fl_PNG_Image d3("dog3.png");} {private local
}

decl {Fl_PNG_Image* bugs[DIRECTIONS] = {&d,&d1,&d2,&d3};} {private local
}

decl {char path[]= "mmmmtmmmmtmmmmtmmmm"} {private local
}

decl {const int P = sizeof(path);} {private local
}

Function {} {
  comment {Use Bug API
compile with:
g++ -o bug bug.cxx `fltk-config --cxxflags --ldflags`} open
} {
  Fl_Window {} {
    label {Bug }
    comment {window to contain buttons and box with bug image} open
    xywh {673 187 350 270} type Double hide
  } {
    Fl_Box b {
      comment {box to hold image of bug}
      xywh {30 30 50 50}
      code0 {b->image(&d);}
    }
    Fl_Button {} {
      label move
      callback {bug.move_one_unit();
b->position(bug.get_column(),bug.get_row());
b->parent()->redraw();}
      comment {move bug in current direction
changle position of box which holds bug
redraw window which is parent of box}
      xywh {110 135 70 20}
    }
    Fl_Button {} {
      label turn
      callback {bug.turn_right();
static int i = EAST;
i = (i + 1) % DIRECTIONS;
b->image(bugs[i]);
b->redraw();}
      comment {Change current direction of bug} selected
      xywh {126 140 70 20}
    }
    Fl_Return_Button {} {
      label Path
      callback {std::cout << "Path button pushed" << std::endl;

static int i = 0;
switch (path[i])
{
	case 'm': cb_move(o,0); break;
	case 't': cb_turn(o,0); break;
};
i = (i+1) % P;}
      comment {The path button will cause the image to move
 according to a predetermined path.}
      xywh {228 140 72 20}
      code0 {\#include <iostream>}
    }
  }
}
